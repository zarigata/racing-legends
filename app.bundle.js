(()=>{"use strict";class t{constructor(t,e){this.lastFrameTime=0,this.fps=0,this.frameCount=0,this.lastFpsUpdate=0,this.ctx=t,this.width=e.width,this.height=e.height,this.horizon=.4*this.height,this.camera={height:1e3,distance:.8,fieldOfView:100,fogDensity:5},this.ctx.imageSmoothingEnabled=!1}setSize(t,e){this.width=t,this.height=e,this.horizon=.4*this.height}render(t,e){const s=performance.now();this.frameCount++,s-this.lastFpsUpdate>1e3&&(this.fps=Math.round(1e3*this.frameCount/(s-this.lastFpsUpdate)),this.frameCount=0,this.lastFpsUpdate=s),this.ctx.clearRect(0,0,this.width,this.height),this.renderSky(),this.renderTrack(t,e),this.ctx.save(),this.renderCar(e),this.ctx.restore(),this.renderHUD(e),this.lastFrameTime=s}renderSky(){const t=this.ctx.createLinearGradient(0,0,0,this.horizon);t.addColorStop(0,"#1E3C72"),t.addColorStop(1,"#2A5298"),this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.width,this.horizon),this.ctx.beginPath(),this.ctx.arc(.8*this.width,.5*this.horizon,40,0,2*Math.PI),this.ctx.fillStyle="#FFD700",this.ctx.fill();const e=this.ctx.createLinearGradient(0,this.horizon,0,this.height);e.addColorStop(0,"#2E8B57"),e.addColorStop(1,"#3CB371"),this.ctx.fillStyle=e,this.ctx.fillRect(0,this.horizon,this.width,this.height-this.horizon),this.ctx.strokeStyle="rgba(255, 255, 255, 0.2)",this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.moveTo(0,this.horizon),this.ctx.lineTo(this.width,this.horizon),this.ctx.stroke()}project(t,e,s,i){const h=t.x-e,n=t.y-s,a=t.z-i,o=this.camera.fieldOfView/(this.camera.fieldOfView+a);return{x:h*o+this.width/2,y:n*o+this.horizon,w:(t.width||1)*o,scale:o}}renderTrack(t,e){const s=t.getVisibleSegments(e);if(s.length<2)return;s[0];const i=e.z-100*this.camera.distance;for(let t=s.length-1;t>=0;t--){const h=s[t],n=s[t+1]||h,a=this.project({x:h.x,y:h.elevation,z:h.z,width:h.width},e.x,this.camera.height,i),o=this.project({x:n.x,y:n.elevation,z:n.z,width:n.width},e.x,this.camera.height,i);a.scale<=0||o.scale<=0||this.drawSegment(a.x,a.y,a.w,o.x,o.y,o.w,h.color1,h.color2,h.color3,a.scale,o.scale)}}drawSegment(t,e,s,i,h,n,a,o,r,l,c){const d=this.ctx,g=this.width,m=t-s/2,p=t+s/2,f=i-n/2,x=i+n/2;if(d.fillStyle=o,d.beginPath(),d.moveTo(0,e),d.lineTo(g,e),d.lineTo(g,h),d.lineTo(0,h),d.closePath(),d.fill(),d.fillStyle=a,d.beginPath(),d.moveTo(m,e),d.lineTo(p,e),d.lineTo(x,h),d.lineTo(f,h),d.closePath(),d.fill(),d.strokeStyle=r,d.lineWidth=4,d.beginPath(),d.moveTo(m,e),d.lineTo(f,h),d.stroke(),d.beginPath(),d.moveTo(p,e),d.lineTo(x,h),d.stroke(),"#FFFFFF"!==a&&"#000000"!==a){const n=10*l,a=5*l;s>40&&(d.strokeStyle=r,d.lineWidth=2,d.setLineDash([n,a]),d.beginPath(),d.moveTo(t,e),d.lineTo(i,h),d.stroke(),d.setLineDash([]))}}renderCar(t){this.ctx.save(),this.ctx.translate(this.width/2,.7*this.height),this.ctx.rotate(t.angle-Math.PI/2),this.ctx.fillStyle="#FF0000",this.ctx.fillRect(-20,-10,40,20),this.ctx.fillStyle="#88CCFF",this.ctx.fillRect(-40/3,-10,40/3*2,10),this.ctx.fillStyle="#333333",this.ctx.fillRect(-12,-8,24,6),this.ctx.fillRect(-12,2,24,6),this.ctx.restore()}renderHUD(t){const e=this.ctx,s=this.width,i=this.height,h=`${Math.abs(Math.round(10*t.speed))} km/h`;e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(20,20,120,50),e.fillStyle="#fff",e.font="12px Arial",e.fillText("SPEED",30,40),e.font="bold 24px Arial",e.fillText(h,30,65),this.fps>0&&(e.fillStyle="rgba(0, 0, 0, 0.5)",e.fillRect(s-70,10,60,25),e.fillStyle="#0f0",e.font="14px Arial",e.textAlign="right",e.fillText(`${this.fps} FPS`,s-15,30),e.textAlign="left"),e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(s-120,i-40,100,30),e.fillStyle="#fff",e.font="14px Arial",e.textAlign="right",e.fillText("LAP 1/3",s-25,i-20),e.textAlign="left"}}class e{constructor(){this.left=!1,this.right=!1,this.up=!1,this.down=!1,window.addEventListener("keydown",(t=>this.handleKeyDown(t))),window.addEventListener("keyup",(t=>this.handleKeyUp(t))),this.setupTouchControls()}handleKeyDown(t){switch(t.key){case"ArrowLeft":this.left=!0;break;case"ArrowRight":this.right=!0;break;case"ArrowUp":this.up=!0;break;case"ArrowDown":this.down=!0}}handleKeyUp(t){switch(t.key){case"ArrowLeft":this.left=!1;break;case"ArrowRight":this.right=!1;break;case"ArrowUp":this.up=!1;break;case"ArrowDown":this.down=!1}}setupTouchControls(){const t=document.createElement("button");t.textContent="◀",t.style.position="fixed",t.style.left="20px",t.style.bottom="20px",t.style.fontSize="24px",t.style.padding="15px 25px",t.style.borderRadius="50%",t.style.border="none",t.style.backgroundColor="rgba(255, 255, 255, 0.5)",t.style.touchAction="manipulation";const e=t.cloneNode();e.textContent="▶",e.style.left="100px";const s=t.cloneNode();s.textContent="▲",s.style.left="60px",s.style.bottom="60px";const i=t.cloneNode();i.textContent="▼",i.style.left="60px",i.style.bottom="20px",t.addEventListener("touchstart",(()=>this.left=!0)),t.addEventListener("touchend",(()=>this.left=!1)),t.addEventListener("touchcancel",(()=>this.left=!1)),e.addEventListener("touchstart",(()=>this.right=!0)),e.addEventListener("touchend",(()=>this.right=!1)),e.addEventListener("touchcancel",(()=>this.right=!1)),s.addEventListener("touchstart",(()=>this.up=!0)),s.addEventListener("touchend",(()=>this.up=!1)),s.addEventListener("touchcancel",(()=>this.up=!1)),i.addEventListener("touchstart",(()=>this.down=!0)),i.addEventListener("touchend",(()=>this.down=!1)),i.addEventListener("touchcancel",(()=>this.down=!1)),document.body.appendChild(t),document.body.appendChild(e),document.body.appendChild(s),document.body.appendChild(i)}}class s{constructor(t=2e3){this.segments=[],this.segmentLength=100,this.colors={road:"#6B6B6B",grass:"#10AA10",rumble:"#555555",lane:"#CCCCCC",start:"#FFFFFF",finish:"#000000"},this.params={length:Math.max(1e3,t),segmentLength:this.segmentLength,worldWidth:2e3,trackWidth:2e3,lanes:3,outsideRumble:5,insideRumble:5,curb:3,dash:2},this.generateTrack()}generateTrack(){var t,e,s;const i=Math.floor(1e6*Math.random()),h=this.seededRandom(i);let n=0,a=0,o=0,r=0;const l=null!==(t=this.params.difficulty)&&void 0!==t?t:.5,c=null!==(e=this.params.hills)&&void 0!==e?e:20,d=null!==(s=this.params.curves)&&void 0!==s?s:20;for(let t=0;t<this.params.length;t++){t%Math.floor(this.params.length/d)===0&&(o=(2*h()-1)*l*10),t%Math.floor(this.params.length/c)===0&&(r=(2*h()-1)*l*100);const e=o*(Math.PI/180);n+=Math.cos(e)*this.segmentLength,a+=Math.sin(e)*this.segmentLength,this.segments.push({x:n,y:a,z:t*this.segmentLength+r,width:this.params.trackWidth,curve:o,elevation:r,fogDensity:.5+.5*h(),color1:this.colors.road,color2:this.colors.grass,color3:this.colors.rumble})}this.segments.length>0&&(this.segments[0].color1=this.colors.start,this.segments[this.segments.length-1].color1=this.colors.finish)}seededRandom(t){return Math.sin(t++),()=>{const e=1e4*Math.sin(t++);return e-Math.floor(e)}}getStartPosition(){return{x:this.segments[0].x,y:this.segments[0].y,angle:Math.PI/2}}getSegmentAt(t){const e=Math.floor(t/this.segmentLength)%this.segments.length;return this.segments[Math.max(0,Math.min(e,this.segments.length-1))]}getSegmentIndex(t){return Math.max(0,Math.min(Math.floor(t/this.segmentLength)%this.segments.length,this.segments.length-1))}getVisibleSegments(t){if(0===this.segments.length)return[];const e=[],s=Math.floor(t.z/this.segmentLength)%this.segments.length;for(let i=0;i<100;i++){const h=(s+i)%this.segments.length,n=this.segments[h];e.push(Object.assign(Object.assign({},n),{z:n.z-t.z,elevation:n.elevation-t.y}))}return e}checkCollisions(t){if(0===this.segments.length)return!1;const e=Math.floor(t.z/this.segmentLength)%this.segments.length,s=this.segments[e],i=this.segments[(e+1)%this.segments.length];if(!s||!i)return!1;const h=t.z%this.segmentLength/this.segmentLength,n=s.x+(i.x-s.x)*h,a=s.y+(i.y-s.y)*h,o=s.width+(i.width-s.width)*h,r=t.x-n,l=t.y-a;return Math.sqrt(r*r+l*l)>o/2-t.width/2&&(t.speed*=.95,!0)}}class i{constructor(t,e,s=Math.PI/2){this.x=t,this.y=e,this.z=0,this.angle=s,this.speed=0,this.maxSpeed=10,this.acceleration=.2,this.turningSpeed=.03,this.width=20}update(t,e){if(t.up?this.speed+=this.acceleration:t.down?this.speed-=this.acceleration:this.speed*=.95,this.speed=Math.max(-5,Math.min(this.maxSpeed,this.speed)),Math.abs(this.speed)>.1){const e=this.speed>0?1:-1;t.left&&(this.angle-=this.turningSpeed*e),t.right&&(this.angle+=this.turningSpeed*e)}this.x+=Math.cos(this.angle)*this.speed,this.y+=Math.sin(this.angle)*this.speed,this.angle=(this.angle%(2*Math.PI)+2*Math.PI)%(2*Math.PI)}reset(t,e,s){this.x=t,this.y=e,this.z=0,this.angle=s,this.speed=0}}class h{constructor(h){this.lastTime=0,this.accumulator=0,this.timeStep=1e3/60,this.canvas=document.getElementById(h),this.ctx=this.canvas.getContext("2d"),this.resizeCanvas(),window.addEventListener("resize",(()=>this.resizeCanvas())),this.renderer=new t(this.ctx,this.canvas),this.input=new e,this.track=new s(2e3),this.car=new i(0,0,0);const n=this.track.getStartPosition();this.car.x=n.x,this.car.y=n.y,this.car.angle=n.angle}resizeCanvas(){const t=Math.min(window.innerWidth,1280),e=Math.min(window.innerHeight,720);this.canvas.width=t,this.canvas.height=e,this.renderer&&this.renderer.setSize(t,e)}start(){this.lastTime=performance.now(),requestAnimationFrame((t=>this.gameLoop(t)))}gameLoop(t){const e=t-this.lastTime;for(this.lastTime=t,this.accumulator+=e;this.accumulator>=this.timeStep;)this.update(this.timeStep),this.accumulator-=this.timeStep;this.render(),requestAnimationFrame((t=>this.gameLoop(t)))}update(t){this.car.update(this.input,t),this.track.checkCollisions(this.car)}render(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.renderer.render(this.track,this.car)}}window.addEventListener("load",(()=>{new h("gameCanvas").start()}))})();